/**
 * This file enhances the quantum wave animation by adding custom effects.
 * Save as quantum-wave-custom.js in your repository and include it as a step in the GitHub Action.
 */

const fs = require('fs');

// Paths
const inputSvgPath = './dist/github-contribution-grid-quantum-wave.svg';
const outputSvgPath = './dist/github-contribution-grid-quantum-wave.svg';
const cssPath = './quantum-wave.css';

// Read the SVG file generated by the snake action
let svgContent = fs.readFileSync(inputSvgPath, 'utf8');

// Read the CSS file
const cssContent = fs.readFileSync(cssPath, 'utf8');

// Modify the SVG to add quantum effects
function enhanceSvgWithQuantumEffects(svg) {
  // Add CSS styles to the SVG
  svg = svg.replace('</svg>', `<style>${cssContent}</style></svg>`);
  
  // Change the snake path class to quantum-trail
  svg = svg.replace('class="snake"', 'class="quantum-trail"');
  
  // Add quantum particle effects at the head of the snake
  const snakePathMatch = svg.match(/<path d="([^"]+)" class="quantum-trail"/);
  if (snakePathMatch) {
    const pathData = snakePathMatch[1];
    // Extract the last point (head of the snake)
    const lastPointMatch = pathData.match(/[LM] (\d+) (\d+)(?!\w)/g);
    if (lastPointMatch) {
      const lastPoint = lastPointMatch[lastPointMatch.length - 1];
      const [x, y] = lastPoint.substr(2).split(' ');
      
      // Add a quantum particle at the head
      const particleEffect = `
        <circle cx="${x}" cy="${y}" r="6" class="quantum-particle">
          <animate attributeName="r" values="4;7;4" dur="2s" repeatCount="indefinite" />
          <animate attributeName="opacity" values="0.7;1;0.7" dur="2s" repeatCount="indefinite" />
        </circle>
      `;
      
      // Add smaller particles following the quantum-trail
      let particlesGroup = '<g class="quantum-particles">';
      for (let i = 0; i < 5; i++) {
        const opacity = 0.8 - (i * 0.15);
        const radius = 5 - (i * 0.8);
        particlesGroup += `
          <circle cx="${x}" cy="${y}" r="${radius}" class="quantum-particle" opacity="${opacity}">
            <animate attributeName="r" values="${radius-1};${radius+1};${radius-1}" dur="${1.5 + i*0.2}s" repeatCount="indefinite" />
          </circle>
        `;
      }
      particlesGroup += '</g>';
      
      // Insert the particle effects after the snake path
      svg = svg.replace(
        `<path d="${pathData}" class="quantum-trail"`,
        `<path d="${pathData}" class="quantum-trail"${particleEffect}${particlesGroup}`
      );
    }
  }
  
  // Add a quantum glow filter definition
  const defs = `
    <defs>
      <filter id="quantum-glow" x="-50%" y="-50%" width="200%" height="200%">
        <feGaussianBlur stdDeviation="3" result="blur" />
        <feComposite in="SourceGraphic" in2="blur" operator="over" />
      </filter>
    </defs>
  `;
  
  // Add the defs after the svg opening tag
  svg = svg.replace('<svg', `<svg${defs}`);
  
  // Apply the glow filter to the quantum trail
  svg = svg.replace('class="quantum-trail"', 'class="quantum-trail" filter="url(#quantum-glow)"');
  
  return svg;
}

// Enhance the SVG with quantum effects
const enhancedSvg = enhanceSvgWithQuantumEffects(svgContent);

// Write the enhanced SVG back to the file
fs.writeFileSync(outputSvgPath, enhancedSvg);

console.log('Quantum wave animation enhanced successfully!');
